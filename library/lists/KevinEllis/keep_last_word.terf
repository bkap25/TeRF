signature until/0 split/0 z_ rev/0 reverse/0 y_ x_ ./2 nil/0 head/0 cons/0 xs_ 0/0 b_ keep_last/0 a_;
head (cons x_ y_) = x_;
head nil = nil;
rev (cons x_ nil) z_ = cons x_ z_;
rev (cons x_ y_) z_ = rev y_ (cons x_ z_);
reverse (cons x_ nil) = cons x_ nil;
reverse (cons x_ y_) = rev y_ (cons x_ nil);
reverse nil = nil;
until x_ (cons x_ y_) a_ = cons a_ (until x_ y_ nil);
until x_ (cons y_ z_) (cons a_ b_) = until x_ z_ (cons a_ (cons y_ b_));
until x_ (cons y_ z_) a_ = until x_ z_ (cons y_ a_);
split x_ xs_ = until x_ xs_ nil;
until x_ nil a_ = cons a_ nil;
keep_last x_ = head (reverse (split 0 x_));
